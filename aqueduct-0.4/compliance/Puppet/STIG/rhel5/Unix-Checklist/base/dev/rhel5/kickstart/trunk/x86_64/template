# Kickstart config file generated by RHN Satellite Config Management
# Profile Label : template
# Date Created  : 2011-05-11 06:29:35.0

install
text
network etwork --device eth0 --bootproto static --hostname alba.chs.spawar.navy.mil --ip 150.125.72.146 --gateway 150.125.72.1 --netmask 255.255.255.0 --nameserver 150.125.132.20,150.125.132.24
url --url http://nces-sb-vm-02.chs.spawar.navy.mil/aaron/kickstart/ks-rhel-x86_64-server-5-u6
lang en_US
keyboard us
zerombr
clearpart --all
bootloader --location mbr
timezone America/New_York
auth --enablemd5 --enableshadow
rootpw --iscrypted $1$COhx0vvP$vgr/i.b4Ro69PdxGoK/8F0
selinux --permissive
reboot
firewall --enabled --port=22:tcp --port=9102:tcp --port=591:tcp --port=5222:tcp --port=4545:tcp --port=5666:tcp --port=161:udp
skipx
repo --name=VT --baseurl=http://nces-sb-vm-02.chs.spawar.navy.mil/ks/dist//VT
key --skip

partition /boot --fstype ext3 --size=400
partition pv.01 --size=250 --grow
volgroup vg00 pv.01
logvol swap --fstype swap --name=swap --vgname=vg00 --size=2048
logvol / --fstype ext3 --name=root --vgname=vg00 --size=1024
logvol /var --fstype ext3 --name=var --vgname=vg00 --size=4096
logvol /home --fstype ext3 --name=home --vgname=vg00 --size=512
logvol /opt --fstype ext3 --name=opt --vgname=vg00 --size=1024
logvol /usr --fstype ext3 --name=usr --vgname=vg00 --size=2048
logvol /tmp --fstype ext3 --name=tmp --vgname=vg00 --size=1024 --grow

%packages 

@ Base

%pre

wget "http://nces-sb-vm-02.chs.spawar.navy.mil/cblr/svc/op/trig/mode/pre/profile/template:463:nces" -O /dev/null


%pre
echo "Saving RHN keys..." > /dev/ttyS0
SYSTEM_ID=/etc/sysconfig/rhn/systemid
rhn_keys_found=no

insmod /lib/jbd.o
insmod /lib/ext3.o

if [ -f /lib/ext4.o ]; then
    insmod /lib/ext4.o
fi

mkdir -p /tmp/rhn

drives=$(list-harddrives | awk '{print $1}')
for disk in $drives; do
    DISKS="$DISKS $(fdisk -l /dev/$disk | grep -v "swap\|LVM\|Extended" | awk '/^\/dev/{print $1}')"
done

# Try to find the keys on ordinary partitions
for disk in $DISKS; do
    name=test-$(basename $disk)
    mkdir -p /tmp/$name
    mount $disk /tmp/$name
    [ $? -eq 0 ] || continue # Skip to the next partition if the mount fails

    # Copy current RHN host keys out to be reused
    if [ -f /tmp/${name}$SYSTEM_ID ]; then
        cp -a /tmp/${name}$SYSTEM_ID /tmp/rhn
        rhn_keys_found="yes"
        umount /tmp/$name
        break
    fi
    umount /tmp/$name
    rm -r /tmp/$name
done

# Try LVM if that didn't work
if [ "$rhn_keys_found" = "no" ]; then
    lvm lvmdiskscan
    vgs=$(lvm vgs | tail -n +2 | awk '{ print $1 }')
    for vg in $vgs; do
        # Activate any VG we found
        lvm vgchange -ay $vg
    done
    
    lvs=$(lvm lvs | tail -n +2 | awk '{ print "/dev/" $2 "/" $1 }')
    for lv in $lvs; do
        tmpdir=$(mktemp -d findkeys.XXXXXX)
        mkdir -p /tmp/${tmpdir}
        mount $lv /tmp/${tmpdir} || continue # Skip to next volume if this fails

        # Let's see if the keys are in there
        if [ -f /tmp/${tmpdir}$SYSTEM_ID ]; then
            cp -a /tmp/${tmpdir}$SYSTEM_ID /tmp/rhn/
            rhn_keys_found="yes"
            umount /tmp/${tmpdir}
            break # We're done!
        fi
        umount /tmp/${tmpdir}
        rm -r /tmp/${tmpdir}
    done
    
    # And clean up..
    for vg in $vgs; do
        lvm vgchange -an $vg
    done
fi




%post --nochroot
mkdir /mnt/sysimage/tmp/ks-tree-copy
if [ -d /oldtmp/ks-tree-shadow ]; then
cp -fa /oldtmp/ks-tree-shadow/* /mnt/sysimage/tmp/ks-tree-copy
elif [ -d /tmp/ks-tree-shadow ]; then
cp -fa /tmp/ks-tree-shadow/* /mnt/sysimage/tmp/ks-tree-copy
fi
cp /etc/resolv.conf /mnt/sysimage/etc/resolv.conf
cp -f /tmp/ks-pre.log* /mnt/sysimage/root/

cp `awk '{ if ($1 ~ /%include/) {print $2}}' /tmp/ks.cfg` /tmp/ks.cfg /mnt/sysimage/root

%post --nochroot --interpreter /usr/bin/python
import xmlrpclib
import shutil
import os
import os.path
old_system_id = "/tmp/rhn/systemid"
new_system_id = "/mnt/sysimage/root/systemid.old"
try:

    new_keys = "463-23c24c78920b69008cacb57c4f43f692,463-4afc9c95b627bb76e3e49f9ec92bcfe1"
    for key in new_keys.split(','):
        if key.startswith('re-'):
            os.exit(0)
    if os.path.exists(old_system_id):
        client =  xmlrpclib.Server("http://nces-sb-vm-02.chs.spawar.navy.mil/rpc/api")
        key = client.system.obtain_reactivation_key(open(old_system_id).read())
        f = open("/mnt/sysimage/tmp/key","w")
        f.write(key)
        f.close()
        shutil.copy(old_system_id, new_system_id)
except:
    # xml rpc due to  a old/bad system id
    # we don't care about those
    # we'll register those as new.
    pass


%post --logfile /root/ks-rhn-post.log
# --Begin RHN Satellite command section--
cat > /tmp/gpg-key-1 <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.7 (GNU/Linux)

mI0ESAP+VwEEAMZylR8dOijUPNn3He3GdgM/kOXEhn3uQl+sRMNJUDm1qebi2D5b
Qa7GNBIlXm3DEMAS+ZlkiFQ4WnhUq5awEXU7MGcWCEGfums5FckV2tysSfn7HeWd
9mkEnsY2CUZF54lyKfY0f+vdFd6QdYo6b+YxGnLyiunEYHXSEo1TNj1vABEBAAG0
QlZNd2FyZSwgSW5jLiAtLSBMaW51eCBQYWNrYWdpbmcgS2V5IC0tIDxsaW51eC1w
YWNrYWdlc0B2bXdhcmUuY29tPoi8BBMBAgAmBQJIA/5XAhsDBQkRcu4ZBgsJCAcD
AgQVAggDBBYCAwECHgECF4AACgkQwLXgq2b9SUkw0AP/UlmWQIjMNcYfTKCOOyFx
Csl3bY5OZ6HZs4qCRvzESVTyKs0YN1gX5YDDRmE5EbaqSO7OLriA7p81CYhstYID
GjVTBqH/zJz/DGKQUv0A7qGvnX4MDt/cvvgEXjGpeRx42le/mkPsHdwbG/8jKveY
S/eu0g9IenS49i0hcOnjShGIRgQQEQIABgUCSAQWfAAKCRD1ZoIQEyn810LTAJ9k
IOziCqa/awfBvlLq4eRgN/NnkwCeJLOuL6eAueYjaODTcFEGKUXlgM4=
=bXtp
-----END PGP PUBLIC KEY BLOCK-----

EOF
# gpg-key1
rpm --import /tmp/gpg-key-1
cat > /tmp/gpg-key-2 <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.2.6 (GNU/Linux)

mQGiBEXopTIRBACZDBMOoFOakAjaxw1LXjeSvh/kmE35fU1rXfM7T0AV31NATCLF
l5CQiNDA4oWreDThg2Bf6+LIVTsGQb1V+XXuLak4Em5yTYwMTVB//4/nMxQEbpl/
QB2XwlJ7EQ0vW+kiPDz/7pHJz1p1jADzd9sQQicMtzysS4qT2i5A23j0VwCg1PB/
lpYqo0ZhWTrevxKMa1n34FcD/REavj0hSLQFTaKNLHRotRTF8V0BajjSaTkUT4uk
/RTaZ8Kr1mTosVtosqmdIAA2XHxi8ZLiVPPSezJjfElsSqOAxEKPL0djfpp2wrTm
l/1iVnX+PZH5DRKCbjdCMLDJhYap7YUhcPsMGSeUKrwmBCBJUPc6DhjFvyhA9IMl
1T0+A/9SKTv94ToP/JYoCTHTgnG5MoVNafisfe0wojP2mWU4gRk8X4dNGKMj6lic
vM6gne3hESyjcqZSmr7yELPPGhI9MNauJ6Ob8cTR2T12Fmv9w03DD3MnBstR6vhP
QcqZKhc5SJYYY7oVfxlSOfF4xfwcHQKoD5TOKwIAQ6T8jyFpKbQkRmVkb3JhIEVQ
RUwgPGVwZWxAZmVkb3JhcHJvamVjdC5vcmc+iGQEExECACQFAkXopTICGwMFCRLM
AwAGCwkIBwMCAxUCAwMWAgECHgECF4AACgkQEZzANiF1IfabmQCgzvE60MnHSOBa
ZXXF7uU2Vzu8EOkAoKg9h+j0NuNom6WUYZyJQt4zc5seuQINBEXopTYQCADapnR/
blrJ8FhlgNPl0X9S3JE/kygPbNXIqne4XBVYisVp0uzNCRUxNZq30MpY027JCs2J
nL2fMpwvx33f0phU029vrIZKA3CmnnwVsjcWfMJOVPBmVN7m5bGU68F+PdRIcDsl
PMOWRLkTBZOGolLgIbM4719fqA8etewILrX6uPvRDwywV7/sPCFpRcfNNBUY+Zx3
5bf4fnkaCKxgXgQS3AT+hGYhlzIqQVTkGNveHTnt4SSzgAqR9sSwQwqvEfVtYNeS
w5rDguLG41HQm1Hojv59HNYjH6F/S1rClZi21bLgZbKpCFX76qPt8CTw+iQLBPPd
yoOGHfzyp7nsfhUrAAMFB/9/H9Gpk822ZpBexQW4y3LGFo9ZSnmu+ueOZPU3SqDA
DW1ovZdYzGuJTGGM9oMl6bL8eZrcUBBOFaWge5wZczIE3hx2exEOkDdvq+MUDVD1
axmN45q/7h1NYRp5GQL2ZsoV4g9U2gMdzHOFtZCER6PP9ErVlfJpgBUCdSL93V4H
Sgpkk7znmTOklbCM6l/G/A6q4sCRqfzHwVSTiruyTBiU9lfROsAl8fjIq2OzWJ2T
P9sadBe1llUYaow7txYSUxssW+89avct35gIyrBbof5M+CBXyAOUaSWmpM2eub24
0qbqiSr/Y6Om0t6vSzR8gRk7g+1H6IE0Tt1IJCvCAMimiE8EGBECAA8FAkXopTYC
GwwFCRLMAwAACgkQEZzANiF1IfZQYgCgiZHCv4xb+sTHCn/otc1Ovvi/OgMAnRXY
bbsLFWOfmzAnNIGvFRWy+YHi
=MMNL
-----END PGP PUBLIC KEY BLOCK-----

EOF
# gpg-key2
rpm --import /tmp/gpg-key-2
cat > /tmp/gpg-key-3 <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.5 (GNU/Linux)

mQENBE1tAXMBCADZDcX/Ulsk1zdmGL8bT+kAUo/jqNUEA7PxPZRrb85i3Grynk/b
gfCdu6+rdp6aktwMRjmACG+F1sMM13Tn4NZu4WNqki6ZQsSkN2TK4X+gPJwcgPt/
lBs99zjjZC0Z8tpSjshCRNNLEpBtlYJUKoDUG5jKgxAecu07BlacgYiFJJxQDDT5
JK91EfL0GsIIgtG3T9ZaikzkVQWvcQbnNPXBNQZqvx2PiFIQ6xwnVRbDK8Och5ff
haxDQI8eHWx2icrv0DNSfjgOu6raNJv5b7MIZzaF1OJHZA+SGjECGl4UQhOngUvY
xsMf5mQIrxPAOTQbOXjh38OxlpdcuvgKB5ZzABEBAAG0LUFhcm9uIFByYXl0aGVy
IChwcmF5dGhlcikgPGFwcmF5dGhlckBsY2UuY29tPokBNgQTAQIAIAUCTW0BcwIb
AwYLCQgHAwIEFQIIAwQWAgMBAh4BAheAAAoJENtFQRz06evAwBEH/30hCSu/gEtz
eZYyh8dmAvIQeuY4rt0IltFpkgCPiWMZPv5cdr+B1lVsTlzdS1eSQvw4+8a2i+yf
MPE3XTsHc1950N/nckMoGL3Zm6MaaSL+TZYhdLLZQ31lEOx04hPWUVgZ1SiJQFIB
Ku/FRf/tueOV/KpWiM2luSbmIi8NuYQ9a9Jku5eJcjiXI1VWYN8JLHiC7oncB+Cj
0GUWPMOA+DCA0R29AsR0WW6NW/FylPcS6aXkFYTa1qdBw2VU9EWJ6YfrG6eOM8S8
GitoFbAaWZDGSDprDy7DikI1FX+SyokHNJoEZZkHp6T8/FjQvK0SF32Uxk7BaSLZ
cj4kiqrmdbk=
=/5Zl
-----END PGP PUBLIC KEY BLOCK-----

EOF
# gpg-key3
rpm --import /tmp/gpg-key-3
cat > /tmp/ssl-key-1 <<'EOF'
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            d7:39:98:8f:bd:73:fe:9c
        Signature Algorithm: sha1WithRSAEncryption
        Issuer: C=US, ST=SC, L=Charleston, O=SPAWAR, OU=C2E, CN=nces-sb-vm-01.chs.spawar.navy.mil
        Validity
            Not Before: Jan  7 13:32:59 2011 GMT
            Not After : Dec 31 13:32:59 2036 GMT
        Subject: C=US, ST=SC, L=Charleston, O=SPAWAR, OU=C2E, CN=nces-sb-vm-01.chs.spawar.navy.mil
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
            RSA Public Key: (2048 bit)
                Modulus (2048 bit):
                    00:c4:20:b1:95:ab:e2:87:eb:52:b3:82:1e:bd:a9:
                    ca:89:c7:a2:42:1f:27:a7:06:6d:91:47:72:22:ae:
                    58:f9:bd:4d:8d:e2:6a:2d:da:97:41:6a:d2:cd:b6:
                    3d:f4:18:1d:2a:2e:c1:c5:38:c1:64:29:a0:4b:0e:
                    7a:72:13:80:ee:0e:5c:f9:20:e1:09:43:8b:11:60:
                    01:15:2e:46:22:bb:1b:d3:04:2d:c5:f9:dc:95:88:
                    4e:dd:1c:56:00:21:2d:a8:88:d9:c4:b8:3e:81:66:
                    ba:0f:a1:1e:cb:2d:5d:ef:7e:94:b6:66:ee:6f:02:
                    d8:fa:99:2b:cc:a7:8e:c8:e2:4c:9f:23:3c:db:fd:
                    8e:56:20:1a:aa:f2:47:68:c3:b3:32:18:4a:82:32:
                    fd:1b:70:1d:e4:45:6b:29:58:ab:a3:b5:6c:58:05:
                    56:66:2f:8b:a3:f5:33:0c:fe:0f:a5:12:f1:7a:99:
                    ba:68:e9:fa:5f:db:2c:28:75:7c:94:a8:d2:c1:55:
                    59:22:71:83:30:d3:48:12:c5:54:72:26:c4:b6:1c:
                    6b:1c:7b:c5:c6:cf:3d:dd:1e:8c:25:90:a3:cd:f6:
                    5a:b8:ca:17:32:ba:58:b0:0a:b5:a6:0f:57:54:3d:
                    83:e2:1e:ea:97:ad:5a:df:4a:f7:98:16:25:b5:d1:
                    be:f9
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Basic Constraints: 
                CA:TRUE
            X509v3 Key Usage: 
                Digital Signature, Key Encipherment, Certificate Sign
            X509v3 Extended Key Usage: 
                TLS Web Server Authentication, TLS Web Client Authentication
            Netscape Comment: 
                RHN SSL Tool Generated Certificate
            X509v3 Subject Key Identifier: 
                E1:75:F2:38:B5:76:D9:8F:E0:97:BB:B2:D7:09:F0:27:E7:58:57:CA
            X509v3 Authority Key Identifier: 
                keyid:E1:75:F2:38:B5:76:D9:8F:E0:97:BB:B2:D7:09:F0:27:E7:58:57:CA
                DirName:/C=US/ST=SC/L=Charleston/O=SPAWAR/OU=C2E/CN=nces-sb-vm-01.chs.spawar.navy.mil
                serial:D7:39:98:8F:BD:73:FE:9C

    Signature Algorithm: sha1WithRSAEncryption
        56:a4:ba:3e:00:79:6b:9c:6c:4a:55:4f:8a:a3:77:a0:fe:2d:
        59:4a:3b:81:32:26:46:65:6a:82:86:94:69:a3:09:4f:66:c0:
        07:fe:57:bc:91:7c:27:32:4b:a2:c8:85:48:4a:6f:74:d4:14:
        da:da:42:37:36:88:59:a5:01:b8:ce:04:a0:e7:d5:64:9a:88:
        21:73:b9:93:fa:4e:d2:77:43:dc:ef:08:4d:d7:f6:53:e7:e7:
        c1:c1:d4:1e:18:fe:4c:d3:56:6d:56:25:3a:e2:bf:82:82:0b:
        07:04:ce:e8:ee:54:41:e4:46:e3:10:ca:16:f6:b5:67:a0:83:
        08:78:fa:7b:48:7a:74:3f:1a:b8:79:65:f4:7f:36:69:9c:0a:
        ce:53:eb:c8:a5:6c:6e:7b:8b:6a:2f:f2:80:ac:83:9a:6e:86:
        4c:22:99:05:f0:ca:47:ca:13:9e:ef:6a:fa:89:1d:1e:c7:56:
        0a:5f:16:63:4f:5b:7c:42:1e:93:b0:a9:06:6f:ba:fa:5b:fc:
        9d:06:40:17:dc:a7:68:9a:5e:cd:67:6e:2c:57:1e:43:a1:c0:
        c0:fc:4f:14:ed:7a:da:97:0a:75:c2:e0:9b:39:eb:39:31:87:
        88:06:61:79:d6:01:72:d3:5f:08:b5:dd:03:cb:5c:10:fb:0b:
        d9:2c:c7:11
-----BEGIN CERTIFICATE-----
MIIEuDCCA6CgAwIBAgIJANc5mI+9c/6cMA0GCSqGSIb3DQEBBQUAMHoxCzAJBgNV
BAYTAlVTMQswCQYDVQQIEwJTQzETMBEGA1UEBxMKQ2hhcmxlc3RvbjEPMA0GA1UE
ChMGU1BBV0FSMQwwCgYDVQQLEwNDMkUxKjAoBgNVBAMTIW5jZXMtc2Itdm0tMDEu
Y2hzLnNwYXdhci5uYXZ5Lm1pbDAeFw0xMTAxMDcxMzMyNTlaFw0zNjEyMzExMzMy
NTlaMHoxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJTQzETMBEGA1UEBxMKQ2hhcmxl
c3RvbjEPMA0GA1UEChMGU1BBV0FSMQwwCgYDVQQLEwNDMkUxKjAoBgNVBAMTIW5j
ZXMtc2Itdm0tMDEuY2hzLnNwYXdhci5uYXZ5Lm1pbDCCASIwDQYJKoZIhvcNAQEB
BQADggEPADCCAQoCggEBAMQgsZWr4ofrUrOCHr2pyonHokIfJ6cGbZFHciKuWPm9
TY3iai3al0Fq0s22PfQYHSouwcU4wWQpoEsOenITgO4OXPkg4QlDixFgARUuRiK7
G9MELcX53JWITt0cVgAhLaiI2cS4PoFmug+hHsstXe9+lLZm7m8C2PqZK8ynjsji
TJ8jPNv9jlYgGqryR2jDszIYSoIy/RtwHeRFaylYq6O1bFgFVmYvi6P1Mwz+D6US
8XqZumjp+l/bLCh1fJSo0sFVWSJxgzDTSBLFVHImxLYcaxx7xcbPPd0ejCWQo832
WrjKFzK6WLAKtaYPV1Q9g+Ie6petWt9K95gWJbXRvvkCAwEAAaOCAT8wggE7MAwG
A1UdEwQFMAMBAf8wCwYDVR0PBAQDAgKkMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggr
BgEFBQcDAjAxBglghkgBhvhCAQ0EJBYiUkhOIFNTTCBUb29sIEdlbmVyYXRlZCBD
ZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQU4XXyOLV22Y/gl7uy1wnwJ+dYV8owgawGA1Ud
IwSBpDCBoYAU4XXyOLV22Y/gl7uy1wnwJ+dYV8qhfqR8MHoxCzAJBgNVBAYTAlVT
MQswCQYDVQQIEwJTQzETMBEGA1UEBxMKQ2hhcmxlc3RvbjEPMA0GA1UEChMGU1BB
V0FSMQwwCgYDVQQLEwNDMkUxKjAoBgNVBAMTIW5jZXMtc2Itdm0tMDEuY2hzLnNw
YXdhci5uYXZ5Lm1pbIIJANc5mI+9c/6cMA0GCSqGSIb3DQEBBQUAA4IBAQBWpLo+
AHlrnGxKVU+Ko3eg/i1ZSjuBMiZGZWqChpRpowlPZsAH/le8kXwnMkuiyIVISm90
1BTa2kI3NohZpQG4zgSg59Vkmoghc7mT+k7Sd0Pc7whN1/ZT5+fBwdQeGP5M01Zt
ViU64r+CggsHBM7o7lRB5EbjEMoW9rVnoIMIePp7SHp0Pxq4eWX0fzZpnArOU+vI
pWxue4tqL/KArIOaboZMIpkF8MpHyhOe72r6iR0ex1YKXxZjT1t8Qh6TsKkGb7r6
W/ydBkAX3Kdoml7NZ24sVx5DocDA/E8U7Xralwp1wuCbOes5MYeIBmF51gFy018I
td0Dy1wQ+wvZLMcR
-----END CERTIFICATE-----

EOF
# ssl-key1
cat /tmp/ssl-key-* > /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT
perl -npe 's/RHNS-CA-CERT/RHN-ORG-TRUSTED-SSL-CERT/g' -i /etc/sysconfig/rhn/*

mkdir -p /tmp/rhn_rpms/optional
cd /tmp/rhn_rpms/optional 
wget -P /tmp/rhn_rpms/optional http://nces-sb-vm-02.chs.spawar.navy.mil/download/package/fff0605eb49bfd5e2f0d6e618197ba715a134d4d/0/523/9325/libxml2-python-2.6.26-2.1.2.8.el5_5.1.x86_64.rpm http://nces-sb-vm-02.chs.spawar.navy.mil/download/package/73ff90dd994d919ca93b74d6ebcecd6ae4d00c01/0/523/2603/pyOpenSSL-0.6-1.p24.7.2.2.x86_64.rpm http://nces-sb-vm-02.chs.spawar.navy.mil/download/package/73212ca99e14e9e7453252c914549076e2f9344a/0/523/17801/rhnlib-2.5.22-5.el5.noarch.rpm 
rpm -Uvh --replacepkgs --replacefiles /tmp/rhn_rpms/optional/pyOpenSSL* /tmp/rhn_rpms/optional/rhnlib* /tmp/rhn_rpms/optional/libxml2-python* 
perl -npe 's|^(\s*serverURL\s*=\s*[^:]+://)[^/]*/|${1}nces-sb-vm-02.chs.spawar.navy.mil/|' -i /etc/sysconfig/rhn/up2date

# now copy from the ks-tree we saved in the non-chroot checkout
cp -fav /tmp/ks-tree-copy/* /
rm -Rf /tmp/ks-tree-copy
# --End RHN Satellite command section--

/etc/init.d/messagebus restart
/etc/init.d/haldaemon restart
# begin cobbler snippet
# begin Red Hat management server registration
mkdir -p /usr/share/rhn/
wget http://nces-sb-vm-02.chs.spawar.navy.mil/pub/RHN-ORG-TRUSTED-SSL-CERT -O /usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT   
perl -npe 's/RHNS-CA-CERT/RHN-ORG-TRUSTED-SSL-CERT/g' -i /etc/sysconfig/rhn/*  
key=""
if [ -f /tmp/key ]; then
    key=`cat /tmp/key`
fi

if [ $key ]; then 
    rhnreg_ks --serverUrl=https://nces-sb-vm-02.chs.spawar.navy.mil/XMLRPC --sslCACert=/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --activationkey=$key,463-23c24c78920b69008cacb57c4f43f692,463-4afc9c95b627bb76e3e49f9ec92bcfe1
else
     rhnreg_ks --serverUrl=https://nces-sb-vm-02.chs.spawar.navy.mil/XMLRPC --sslCACert=/usr/share/rhn/RHN-ORG-TRUSTED-SSL-CERT --activationkey=463-23c24c78920b69008cacb57c4f43f692,463-4afc9c95b627bb76e3e49f9ec92bcfe1
fi
# end Red Hat management server registration

# end cobbler snippet

rhn_check

# Start post_install_network_config generated code
# End post_install_network_config generated code



%post --interpreter /bin/bash --logfile /root/ks-post.log.1
cp /etc/rc.local /etc/rc.local.orig

cat <<'EOF1' > /etc/provision_reboot.sh
#!/bin/bash
cp /etc/rc.local.orig /etc/rc.local
reboot
EOF1

> /etc/motd
yum -y update yum
yum -y install puppet-stig
yum -y install puppet-site
yum -y update
# yum -y install rhncfg rhncfg-actions rhncfg-client rhncfg-management
yum -y install vmware-open-vm-tools

cp /etc/rc.local /etc/rc.local.orig

cat <<'EOF2' > /etc/rc.local
/usr/bin/puppet --modulepath=/etc/puppet/modules/stig/ /etc/puppet/manifests/stig.pp
/usr/bin/puppet --modulepath=/etc/puppet/modules/site/ /etc/puppet/manifests/site.pp

 OldSoS=`ls /tmp | grep sosreport`

  if [ ! "$OldSoS" == "" ]; then

   rm -rf /tmp/sosreport* /tmp/sos_*
  fi

  echo /n
  echo "Running sosreport... this takes up to 10 minutes"
  echo /n
  echo "/n
  " | sosreport
 
  mv /tmp/sosreport* /root/

cat /etc/rc.local > /root/ks-rc.local
cp /etc/rc.local.orig /etc/rc.local

/etc/provision_reboot.sh
EOF2

%post


# Start koan environment setup
echo "export COBBLER_SERVER=nces-sb-vm-02.chs.spawar.navy.mil" > /etc/profile.d/cobbler.sh
echo "setenv COBBLER_SERVER nces-sb-vm-02.chs.spawar.navy.mil" > /etc/profile.d/cobbler.csh
# End koan environment setup

# MOTD
echo >> /etc/motd
echo "RHN Satellite kickstart on $(date +'%Y-%m-%d')" >> /etc/motd
echo >> /etc/motd

# end of generated kickstart file

wget "http://nces-sb-vm-02.chs.spawar.navy.mil/cblr/svc/op/ks/profile/template:463:nces" -O /root/cobbler.ks
wget "http://nces-sb-vm-02.chs.spawar.navy.mil/cblr/svc/op/trig/mode/post/profile/template:463:nces" -O /dev/null